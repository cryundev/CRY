#pragma once


//---------------------------------------------------------------------------------------------------------------------
/// Includes
//---------------------------------------------------------------------------------------------------------------------
#include "DirectXTK/Inc/SimpleMath.h"
#include <memory>
#include <string>
#include <vector>
#include <unordered_map>


//---------------------------------------------------------------------------------------------------------------------
/// DirectX
//---------------------------------------------------------------------------------------------------------------------
using CRVector   = DirectX::SimpleMath::Vector3;
using CRVector2D = DirectX::SimpleMath::Vector2;


//---------------------------------------------------------------------------------------------------------------------
/// Strings
//---------------------------------------------------------------------------------------------------------------------
using CRString  = std::string;
using CWRString = std::wstring;
using CRName    = CRString;


//---------------------------------------------------------------------------------------------------------------------
/// Containers
//---------------------------------------------------------------------------------------------------------------------
template< typename T >
using CRArray = std::vector< T >;

template< typename K, typename V >
using CRMap = std::unordered_map< K, V >;


//---------------------------------------------------------------------------------------------------------------------
/// Smart pointers
//---------------------------------------------------------------------------------------------------------------------
template< typename T >
using CRSharedPtr = std::shared_ptr< T >;

template< typename T >
using CRWeakPtr = std::weak_ptr< T >;

template< typename T >
CRSharedPtr< T > CRMakeShared( T* New )
{
	return std::shared_ptr< T >( New );
}



